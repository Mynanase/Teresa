{
    "tiddlers": {
        "$:/plugins/gt6796c/calc-tw5/example": {
            "title": "$:/plugins/gt6796c/calc-tw5/example",
            "text": "Widget notation\n\n```\n<$calculator equation=\".05 + .25\n.25/.65\n\"></$calculator>\n```\n\n<$calculator equation=\".05 + .25\n.25/.65\n\"></$calculator>\n\n```\n<$calculator fixed='4' equation=\".05 + .25\n.25/.65\n\"></$calculator>\n```\n\n<$calculator fixed='4' equation=\".05 + .25\n.25/.65\n\"></$calculator>\n\n\nInline notation\n\n```\n??.25/.65??\n```\n\n\n??.25/.65??\n\nInline notation with fixed precision\n\n```\n''??.25/.65%.2??''\n```\n\n''??.25/.65%.2??''\n\n"
        },
        "$:/plugins/gt6796c/calc-tw5/parser.js": {
            "text": "/*\\\ntitle: $:/plugins/gt6796c/calc-tw5/parser.js\ntype: application/javascript\nmodule-type: wikirule\n\nWiki text inline rule for calculator. For example:\n\n```\n\t??equations-goes-here??\n```\n\nThis wikiparser can be modified using the rules eg:\n\n```\n\\rules except latex-parser\n\\rules only latex-parser\n```\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global ?tw: false */\n\"use strict\";\n\nexports.name = \"calc-tw5-parser\";\nexports.types = {inline: true};\n\nexports.init = function(parser) {\n\tthis.parser = parser;\n\t// Regexp to match\n\tthis.matchRegExp = /\\?\\?(?!\\?)/mg;\n};\n\nexports.parse = function() {\n\t// Move past the match\n\tthis.parser.pos = this.matchRegExp.lastIndex;\n\t//var reEnd = /\\?\\?/mg;\n\t// look for optional %P.F before ??\n\tvar reEnd = /(?:%(\\d+)?(?:\\.(\\d+)))?(\\?\\?)/gm\n\n\t// Look for the end marker\n\treEnd.lastIndex = this.parser.pos;\n\tvar match = reEnd.exec(this.parser.source),\n\t\ttext,\n\t\tfixed = -1;\n\t// Process the text\n\tif(match) {\n\t\ttext = this.parser.source.substring(this.parser.pos,match.index);\n\t\tif (match[2]) fixed = match[2]\n\t\tthis.parser.pos = match.index + match[0].length;\n\t} else {\n\t\ttext = this.parser.source.substr(this.parser.pos);\n\t\tthis.parser.pos = this.parser.sourceLength;\n\t}\n\treturn [{\n\t\ttype: \"calculator\",\n\t\tattributes: {\n\t\t\tequation: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tvalue: text\n\t\t\t},\n\t\t\tfixed: {\n\t\t\t\ttype: \"text\",\n\t\t\t\tvalue: fixed\n\t\t\t}\n\t\t}\n\t}];\n};\n\n})();\n",
            "title": "$:/plugins/gt6796c/calc-tw5/parser.js",
            "type": "application/javascript",
            "module-type": "wikirule"
        },
        "$:/plugins/gt6796c/calc-tw5/usage": {
            "title": "$:/plugins/gt6796c/calc-tw5/usage",
            "text": "This widget allows the user to create simple equations and show the result. Multiple Equations can be specified on separate lines to represent a system of equations. (See examples)\n\nThe equation body can either be placed in the \"equation\" attribute or as the body of the widget.\n\nThe following attributes are customizable for the widget:\n\n; fixed - integer\n: defaults to not used, limits (0-20)\n\n!!Notes\n*The body of the text is parsed as a Tiddler. If you need conflicting elements, use either the ``equation`` attribute on the widget.\n"
        },
        "$:/plugins/gt6796c/calc-tw5/widget.js": {
            "text": "/*\\\ntitle: $:/plugins/gt6796c/calc-tw5/widget.js\ntype: application/javascript\nmodule-type: widget\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n    var Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n    var Rocklib = require(\"$:/plugins/gt6796c/rocklib/widget-tools.js\").rocklib;\n\n    if ($tw.browser) {\n        window.rocklib = new Rocklib();\n    }\n\n\n    var CalculatorWidget = function(parseTreeNode, options) {\n        this.initialise(parseTreeNode, options);\n    };\n\n    CalculatorWidget.prototype = new Widget();\n\n    /*\n     Render this widget into the DOM\n     */\n    CalculatorWidget.prototype.render = function(parent,nextSibling) {\n        this.parentDomNode = parent;\n        this.computeAttributes();\n        this.execute();\n\n        var tag = 'calculator';\n        var scriptBody = rocklib.getScriptBody(this,\"equation\").trim();\n        try {\n            var options = {}\n            options['fixed'] = -1;\n            rocklib.getOptions(this, tag, options);\n            options['fixed'] = options['fixed']*1;\n            var eqs = scriptBody.split('\\n');\n            var canvas = rocklib.getCanvas(this,tag,eqs.length > 1 ? \"div\" : \"span\");\n            for (var i=0;i<eqs.length;++i) {\n                var eq = eqs[i].trim();\n                var f = Function(\"return \" + eq + \";\");\n                var result = f();\n                if (options['fixed'] > 0 )\n                    result = result.toFixed(options['fixed'])\n                if (canvas.innerHTML.length > 0)\n                    canvas.innerHTML += \"<br/>\";\n                canvas.innerHTML += (eq + \" = \" + result);\n            }\n        }\n        catch(ex)\n        {\n            canvas = this.document.createElement(\"div\");\n            canvas.innerText = ex.stack;\n        }\n        parent.insertBefore(canvas, nextSibling);\n\n        this.domNodes.push(canvas);\n    };\n\n    CalculatorWidget.prototype.execute = function() {\n        // Nothing to do\n    };\n\n    /*\n     Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n     */\n    CalculatorWidget.prototype.refresh = function(changedTiddlers) {\n        return false;\n    };\n\n    exports.calculator = CalculatorWidget;\n\n})();\n",
            "title": "$:/plugins/gt6796c/calc-tw5/widget.js",
            "type": "application/javascript",
            "module-type": "widget"
        }
    }
}